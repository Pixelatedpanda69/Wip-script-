local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/Splix"))()

local window = library:new({textsize = 13.5,font = Enum.Font.RobotoMono,name = "YES",color = Color3.fromRGB(225,58,81)})

local tab = window:page({name = "YES2"})

local section1 = tab:section({name = "section1",side = "left",size = 250})

local multisection = tab:multisection({name = "multisection",side = "right",size = 250})

local section2 = multisection:section({name = "section2",side = "right",size = 100})

section1:toggle({name = "aimbot",def = false,callback = function(value)
  tog = value
  -- MM2 Auto-Hit Script (Sheriff/Murderer - Single Target)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local mouse = player:GetMouse()

local function getRole()
  return player:GetAttribute("Role")
end

local function getTarget()
  local role = getRole()
  local targetRole = (role == "Sheriff") and "Murderer" or "Innocent"

  for _, targetPlayer in ipairs(game.Players:GetPlayers()) do
    if targetPlayer ~= player then
      local otherRole = targetPlayer:GetAttribute("Role")
      if otherRole == targetRole then
        return targetPlayer
      end
    end
  end
  return nil
end

local function hitTarget(targetPlayer)
  if not targetPlayer then return end

  local targetCharacter = targetPlayer.Character
  if not targetCharacter then return end

  local targetHumanoid = targetCharacter:FindFirstChild("Humanoid")
  if not targetHumanoid then return end

  local myWeapon = character:FindFirstChildOfClass("Tool")
  if not myWeapon then return end

  myWeapon:Activate() -- Fire the weapon.
end

local function hit()
  local targetPlayer = getTarget()
  if targetPlayer then
    local origin = character.HumanoidRootPart.Position;
    local target = targetPlayer.Character.HumanoidRootPart.Position;
    local direction = (target - origin).Unit * 1000;

    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {character}

    local raycastResult = workspace:Raycast(origin, direction, raycastParams);

    if raycastResult and raycastResult.Instance:IsDescendantOf(targetPlayer.Character) then
      hitTarget(targetPlayer)
    end
  end
end

mouse.Button1Down:Connect(function()
  hit()
end)

section1:toggle({name = "esp",def = false,callback = function(value)
  tog = value
		-- MM2 Player Box ESP Script

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local espTable = {} -- Table to store ESP boxes

local function createESP(targetPlayer, color, showDistance)
  local targetCharacter = targetPlayer.Character
  if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
    local box = Instance.new("BillboardGui")
    box.Size = UDim2.new(0, 50, 0, 50)
    box.Adornee = targetCharacter.HumanoidRootPart
    box.AlwaysOnTop = true
    box.StudsOffset = Vector3.new(0, 2.5, 0)
    box.Parent = targetCharacter.HumanoidRootPart

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = color
    frame.BackgroundTransparency = 0.5
    frame.Parent = box

    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
    distanceLabel.Position = UDim2.new(0,0,0.5,0)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = Color3.new(1, 1, 1)
    distanceLabel.TextScaled = true
    distanceLabel.Parent = frame

    espTable[targetPlayer.UserId] = {box = box, distanceLabel = distanceLabel}

    return box
  end
end

local function updateESP()
  for targetPlayer, espData in pairs(espTable) do
    if targetPlayer and espData and espData.box and espData.distanceLabel then
      local targetCharacter = targetPlayer.Character
      if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
        local distance = (character.HumanoidRootPart.Position - targetCharacter.HumanoidRootPart.Position).Magnitude
        espData.distanceLabel.Text = math.floor(distance) .. " studs"
      else
        espData.box:Destroy()
        espTable[targetPlayer.UserId] = nil
      end
    end
  end
end

local function handlePlayer(targetPlayer)
  if targetPlayer ~= player then
    local targetRole = targetPlayer:GetAttribute("Role")
    local targetCharacter = targetPlayer.Character

    if targetRole == "Sheriff" then
      createESP(targetPlayer, Color3.new(0, 0, 1), true) -- Blue
    elseif targetRole == "Murderer" then
      createESP(targetPlayer, Color3.new(1, 0, 0), true) -- Red
    elseif targetRole == "Innocent" then
        createESP(targetPlayer, Color3.new(0, 1, 0), false) -- Green
    end

    targetPlayer.CharacterAdded:Connect(function(newCharacter)
        local targetRole = targetPlayer:GetAttribute("Role")
        if targetRole == "Sheriff" then
           createESP(targetPlayer, Color3.new(0, 0, 1), true)
        elseif targetRole == "Murderer" then
           createESP(targetPlayer, Color3.new(1, 0, 0), true)
        elseif targetRole == "Innocent" then
           createESP(targetPlayer, Color3.new(0, 1, 0), false)
        end
    end)

    targetPlayer.CharacterRemoving:Connect(function()
        if espTable[targetPlayer.UserId] then
          espTable[targetPlayer.UserId].box:Destroy()
          espTable[targetPlayer.UserId] = nil;
        end
    end)
  end
end

local function handleGun(targetPlayer)
  local targetCharacter = targetPlayer.Character
  if targetCharacter then
    local gun = targetCharacter:FindFirstChildOfClass("Tool")
    if gun and gun.Name == "Gun" then
        createESP(targetPlayer, Color3.new(0, 0, 1), true) -- Blue if innocent picks up gun
    else
        if targetPlayer:GetAttribute("Role") == "Innocent" then
            local espData = espTable[targetPlayer.UserId]
            if espData then
                espData.box:Destroy()
                espTable[targetPlayer.UserId] = nil
                createESP(targetPlayer, Color3.new(0,1,0), false)
            end
        end
    end
  end
end

local function handleSheriffDeath()
  game.Players.PlayerRemoving:Connect(function(leftPlayer)
    if leftPlayer:GetAttribute("Role") == "Sheriff" then
      for _, targetPlayer in pairs(game.Players:GetPlayers()) do
        local targetCharacter = targetPlayer.Character
        local gun = targetCharacter:FindFirstChildOfClass("Tool")
        if gun and gun.Name == "Gun" then
            createESP(gun.Parent.Parent, Color3.new(1, 0, 1), true) -- Purple gun location
        end
      end
    end
  end)
end

game.Players.PlayerAdded:Connect(handlePlayer)

for _, targetPlayer in pairs(game.Players:GetPlayers()) do
  handlePlayer(targetPlayer)
end

game:GetService("RunService").Heartbeat:Connect(updateESP)

game.Players.PlayerAdded:Connect(function(targetPlayer)
    targetPlayer.CharacterAdded:Connect(function(char)
        char.ChildAdded:Connect(function(obj)
            if obj:IsA("Tool") then
                handleGun(targetPlayer)
            end
        end)
        char.ChildRemoved:Connect(function(obj)
            if obj:IsA("Tool") then
                handleGun(targetPlayer)
            end
        end)
    end)
end)

handleSheriffDeath()

		section1:toggle({name = "dodge",def = false,callback = function(value)
  tog = value
-- MM2 Auto-Dodge Script

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local dodgeDistance = 5 -- Adjust this value to control dodge distance
local dodgeCooldown = 1 -- Adjust this value to control dodge cooldown
local lastDodgeTime = 0

local function getAttacker()
  for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
    if otherPlayer ~= player then
      local otherCharacter = otherPlayer.Character
      if otherCharacter and otherCharacter:FindFirstChild("HumanoidRootPart") then
        local otherRole = otherPlayer:GetAttribute("Role")
        local myRole = player:GetAttribute("Role")

        if myRole == "Sheriff" or myRole == "Innocent" then
          if otherRole == "Murderer" then
            local weapon = otherCharacter:FindFirstChildOfClass("Tool")
            if weapon and weapon.Name == "Knife" then -- Check if they are holding the knife.
              return otherPlayer, weapon
            end
          end
        elseif myRole == "Murderer" then
          if otherRole == "Sheriff" then
            local weapon = otherCharacter:FindFirstChildOfClass("Tool")
            if weapon and weapon.Name == "Gun" then -- Check if they are holding the gun.
              return otherPlayer, weapon
            end
          end
        end
      end
    end
  end
  return nil, nil
end

local function dodgeAttack(attacker, weapon)
  local currentTime = tick()
  if currentTime - lastDodgeTime < dodgeCooldown then
    return -- Cooldown active, don't dodge
  end

  if not attacker or not weapon then
    return
  end

  local attackerCharacter = attacker.Character
  local attackerRootPart = attackerCharacter:FindFirstChild("HumanoidRootPart")

  if not attackerRootPart then
    return
  end

  local direction = (rootPart.Position - attackerRootPart.Position).Unit
  local dodgeVector = direction * dodgeDistance

  local newPosition = rootPart.Position + dodgeVector

  local humanoidState = humanoid:GetState()

  if humanoidState == Enum.HumanoidStateType.Running or humanoidState == Enum.HumanoidStateType.Freefall or humanoidState == Enum.HumanoidStateType.Landed then
    rootPart.CFrame = CFrame.new(newPosition, rootPart.Position)
    lastDodgeTime = currentTime
  end
end

game:GetService("RunService").Heartbeat:Connect(function()
  local attacker, weapon = getAttacker()
  if attacker and weapon then
    dodgeAttack(attacker, weapon)
  end
end)

end})
