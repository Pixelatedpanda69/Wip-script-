local code = [[
    local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

    local Window = Rayfield:CreateWindow({
        Name = "mm2 ",
        Icon = 0,
        LoadingTitle = "test hub",
        LoadingSubtitle = "by_ pixelatedpanda69",
        Theme = "amethyst",
        DisableRayfieldPromptsAndBuildWarnings = false,
        ConfigurationSaving = {
            Enabled = true,
            FolderName = nil,
            FileName = "Big Hub"
        },
        Discord = {
            Enabled = false,
            Invite = "noinvitelink",
            RememberJoins = true
        },
        KeySystem = false,
        KeySettings = {
            Title = "Untitled",
            Subtitle = "Key System",
            Note = "No method of obtaining the key is provided",
            FileName = "Key",
            SaveKey = true,
            GrabKeyFromSite = false,
            Key = { "Hello" }
        }
    })

    local MainTab = Window:CreateTab("home", nil)
    local MainSection = MainTab:CreateSection("home")

    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer
    local Mouse = Player:GetMouse()
    local RunService = game:GetService("RunService")

    -- Function to find the murderer
    local function findMurderer()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Player and player:GetAttribute("Role") == "Murderer" then
                return player
            end
        end
        return nil
    end

    -- Function to check if player is Sheriff
    local function isSheriff()
        return Player:GetAttribute("Role") == "Sheriff"
    end

    -- Function to get the gun
    local function getGun()
        if Player.Character then
            return Player.Character:FindFirstChild("Gun")
        end
        return nil
    end

    -- Main hit function
    local function autoHitMurderer()
        if not isSheriff() then return end

        local gun = getGun()
        if not gun then return end

        local murderer = findMurderer()
        if not murderer or not murderer.Character then return end

        local humanoidRootPart = murderer.Character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then return end

        -- Auto-aim at murderer
        local origin = Player.Character.HumanoidRootPart.Position
        local target = humanoidRootPart.Position
        local direction = (target - origin).Unit * 100

        -- Fire the gun
        gun:Activate()
    end

    -- Function to find closest player
    local function findClosestPlayer()
        local closestPlayer = nil
        local shortestDistance = math.huge

        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Player and player.Character then
                local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    local ray = Ray.new(
                        Player.Character.HumanoidRootPart.Position,
                        humanoidRootPart.Position - Player.Character.HumanoidRootPart.Position
                    )
                    local hit, position = workspace:FindPartOnRay(ray, Player.Character)

                    if not hit or hit:IsDescendantOf(player.Character) then
                        local distance = (Player.Character.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude
                        if distance < shortestDistance then
                            closestPlayer = player
                            shortestDistance = distance
                        end
                    end
                end
            end
        end
        return closestPlayer
    end

    -- Function to auto throw knife at closest player
    local function autoThrowKnife()
        if Player:GetAttribute("Role") ~= "Murderer" then return end

        local knife = Player.Character and Player.Character:FindFirstChild("Knife")
        if not knife then return end

        local target = findClosestPlayer()
        if not target or not target.Character then return end

        local humanoidRootPart = target.Character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then return end

        local origin = Player.Character.HumanoidRootPart.Position
        local targetPos = humanoidRootPart.Position
        local direction = (targetPos - origin).Unit * 100

        knife:Activate()
    end

    -- Auto Throw Toggle
    local autoThrowEnabled = false
    local autoThrowConnection = nil

    -- Auto Dodge functionality
    local function autoDodge()
        if not Player.Character then return end
        
        local humanoid = Player.Character:FindFirstChild("Humanoid")
        if not humanoid then return end
        
        local movePatterns = {
            function()
                humanoid.Jump = true
                humanoid:MoveTo(Player.Character.HumanoidRootPart.Position + Vector3.new(math.random(-10, 10), 0, math.random(-10, 10)))
            end,
            function()
                local direction = math.random() > 0.5 and 1 or -1
                humanoid:MoveTo(Player.Character.HumanoidRootPart.Position + Vector3.new(direction * 5, 0, direction * 5))
            end,
            function()
                humanoid.Jump = true
            end
        }
        
        movePatterns[math.random(1, #movePatterns)]()
    end

    local function checkForThreats()
        local isMurderer = Player:GetAttribute("Role") == "Murderer"
        local threatDistance = 20

        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Player and player.Character then
                local distance = (Player.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                
                if distance <= threatDistance then
                    if isMurderer and player:GetAttribute("Role") == "Sheriff" then
                        return true
                    elseif not isMurderer and player:GetAttribute("Role") == "Murderer" then
                        return true
                    end
                end
            end
        end
        return false
    end

    local autoDodgeEnabled = false
    local autoDodgeConnection = nil

    -- ESP System
    local ESP = Instance.new("Folder")
    ESP.Name = "ESP"
    ESP.Parent = game.CoreGui

    local function CreateBox(player)
        local BoxOutline = Instance.new("BoxHandleAdornment")
        BoxOutline.Name = player.Name .. "BoxOutline"
        BoxOutline.Size = Vector3.new(4, 5, 2)
        BoxOutline.Color3 = Color3.new(0, 0, 0)
        BoxOutline.Transparency = 0.5
        BoxOutline.ZIndex = 0
        BoxOutline.AlwaysOnTop = true
        BoxOutline.Visible = true
        BoxOutline.Adornee = player.Character.HumanoidRootPart
        BoxOutline.Parent = ESP

        local Box = Instance.new("BoxHandleAdornment")
        Box.Name = player.Name .. "Box"
        Box.Size = Vector3.new(4, 5, 2)
        Box.Transparency = 0.5
        Box.ZIndex = 1
        Box.AlwaysOnTop = true
        Box.Visible = true
        Box.Adornee = player.Character.HumanoidRootPart
        Box.Parent = ESP

        local DistanceLabel = Instance.new("BillboardGui")
        DistanceLabel.Name = player.Name .. "Distance"
        DistanceLabel.Size = UDim2.new(0, 200, 0, 50)
        DistanceLabel.AlwaysOnTop = true
        DistanceLabel.StudsOffset = Vector3.new(0, 3, 0)
        DistanceLabel.Parent = ESP

        local Distance = Instance.new("TextLabel")
        Distance.Name = "Distance"
        Distance.BackgroundTransparency = 1
        Distance.Size = UDim2.new(0, 200, 0, 50)
        Distance.Text = ""
        Distance.TextColor3 = Color3.new(1, 1, 1)
        Distance.TextSize = 15
        Distance.Font = Enum.Font.SourceSansBold
        Distance.Parent = DistanceLabel

        return { BoxOutline = BoxOutline, Box = Box, DistanceLabel = DistanceLabel }
    end

    local function UpdateESP()
        local LocalPlayer = Players.LocalPlayer
        if not LocalPlayer then return end

        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local esp = ESP:FindFirstChild(player.Name .. "Box")
                local espOutline = ESP:FindFirstChild(player.Name .. "BoxOutline")
                local distanceLabel = ESP:FindFirstChild(player.Name .. "Distance")

                if not esp then
                    local espObjects = CreateBox(player)
                    esp = espObjects.Box
                    espOutline = espObjects.BoxOutline
                    distanceLabel = espObjects.DistanceLabel
                end

                if distanceLabel then
                    distanceLabel.Adornee = player.Character.HumanoidRootPart
                    local distance = math.floor((LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude)
                    local label = distanceLabel.Distance

                    if player:GetAttribute("Role") == "Murderer" then
                        esp.Color3 = Color3.new(1, 0, 0)
                        label.Text = "Murderer [" .. distance .. "m]"
                    elseif player:GetAttribute("Role") == "Sheriff" then
                        esp.Color3 = Color3.new(0, 0, 1)
                        label.Text = "Sheriff [" .. distance .. "m]"
                    elseif player.Character:FindFirstChild("Gun") then
                        esp.Color3 = Color3.new(0, 0, 1)
                        label.Text = "Armed [" .. distance .. "m]"
                    else
                        esp.Color3 = Color3.new(0, 1, 0)
                        label.Text = "Innocent"
                    end
                end
            end
        end

        for _, esp in pairs(ESP:GetChildren()) do
            local playerName = esp.Name:gsub("Box", ""):gsub("Distance", ""):gsub("BoxOutline", "")
            if not Players:FindFirstChild(playerName) then
                esp:Destroy()
            end
        end

        local DroppedGun = workspace:FindFirstChild("GunDrop")
        if DroppedGun then
            local gunEsp = ESP:FindFirstChild("DroppedGunBox")
            if not gunEsp then
                local gunBox = Instance.new("BoxHandleAdornment")
                gunBox.Name = "DroppedGunBox"
                gunBox.Size = Vector3.new(2, 2, 2)
                gunBox.Color3 = Color3.new(0, 0, 1)
                gunBox.Transparency = 0.5
                gunBox.ZIndex = 1
                gunBox.AlwaysOnTop = true
                gunBox.Visible = true
                gunBox.Adornee = DroppedGun
                gunBox.Parent = ESP

                local gunLabel = Instance.new("BillboardGui")
                gunLabel.Name = "DroppedGunDistance"
                gunLabel.Size = UDim2.new(0, 200, 0, 50)
                gunLabel.AlwaysOnTop = true
                gunLabel.StudsOffset = Vector3.new(0, 2, 0)
                gunLabel.Parent = ESP

                local gunDistance = Instance.new("TextLabel")
                gunDistance.Name = "Distance"
                gunDistance.BackgroundTransparency = 1
                gunDistance.Size = UDim2.new(0, 200, 0, 50)
                gunDistance.TextColor3 = Color3.new(1, 1, 1)
                gunDistance.TextSize = 15
                gunDistance.Font = Enum.Font.SourceSansBold
                gunDistance.Parent = gunLabel
            end

            local gunLabel = ESP:FindFirstChild("DroppedGunDistance")
            if gunLabel and LocalPlayer.Character then
                gunLabel.Adornee = DroppedGun
                local distance = math.floor((LocalPlayer.Character.HumanoidRootPart.Position - DroppedGun.Position).Magnitude)
                gunLabel.Distance.Text = "Dropped Gun [" .. distance .. "m]"
            end
        end
    end

    -- Create Toggles
    local DodgeToggle = MainTab:CreateToggle({
        Name = "Auto Dodge",
        CurrentValue = false,
        Flag = "Toggle_AutoDodge",
        Callback = function(Value)
            autoDodgeEnabled = Value
            if Value then
                autoDodgeConnection = game:GetService("RunService").Heartbeat:Connect(function()
                    if autoDodgeEnabled and checkForThreats() then
                        autoDodge()
                    end
                end)
            else
                if autoDodgeConnection then
                    autoDodgeConnection:Disconnect()
                    autoDodgeConnection = nil
                end
            end
        end,
    })

    local Toggle = MainTab:CreateToggle({
        Name = "Auto Throw (Murderer)",
        CurrentValue = false,
        Flag = "Toggle_AutoThrow",
        Callback = function(Value)
            autoThrowEnabled = Value
            if Value then
                autoThrowConnection = game:GetService("RunService").Heartbeat:Connect(function()
                    if autoThrowEnabled then
                        autoThrowKnife()
                    end
                end)
            else
                if autoThrowConnection then
                    autoThrowConnection:Disconnect()
                    autoThrowConnection = nil
                end
            end
        end,
    })

    -- Connect ESP update
    RunService.RenderStepped:Connect(UpdateESP)

    -- Clean up ESP when player leaves
    Players.PlayerRemoving:Connect(function(player)
        local esp = ESP:FindFirstChild(player.Name .. "Box")
        local espOutline = ESP:FindFirstChild(player.Name .. "BoxOutline")
        local distanceLabel = ESP:FindFirstChild(player.Name .. "Distance")

        if esp then esp:Destroy() end
        if espOutline then espOutline:Destroy() end
        if distanceLabel then distanceLabel:Destroy() end
    end)

    -- Connect auto hit
    Mouse.Button1Down:Connect(function()
        autoHitMurderer()
    end)
