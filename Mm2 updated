local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "mm2 √∞≈∏‚Äù¬™ ",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "mm2 üî™‚Äù¬™ ",
   LoadingSubtitle = "by pixelatedpanda69",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "corn Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:MakeTab("Home", nil) -- Title, Image
local MainSection = Tab:CreateSection("Main")

local Toggle = MainTab:MakeToggle({
   Name = "sherif",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- MM2 Auto-Hit Script (Sheriff Only)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local mouse = player:GetMouse()

local function isSheriff()
  local role = player:GetAttribute("Role")
  return role == "Sheriff"
end

local function getMurderer()
  for _, targetPlayer in ipairs(game.Players:GetPlayers()) do
    if targetPlayer ~= player then
      local targetRole = targetPlayer:GetAttribute("Role")
      if targetRole == "Murderer" then
        return targetPlayer
      end
    end
  end
  return nil
end

local function hitMurderer()
  local murderer = getMurderer()
  if murderer then
    local murdererCharacter = murderer.Character
    if murdererCharacter then
      local murdererHumanoid = murdererCharacter:FindFirstChild("Humanoid")
      if murdererHumanoid then
        local myWeapon = character:FindFirstChildOfClass("Tool")
        if myWeapon and myWeapon.Name == "Gun" then -- Check if the player is holding the gun
          local raycastParams = RaycastParams.new()
          raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
          raycastParams.FilterDescendantsInstances = {character}

          local raycastResult = workspace:Raycast(mouse.Origin, mouse.UnitRay.Direction * 1000, raycastParams)

          if raycastResult and raycastResult.Instance:IsDescendantOf(murdererCharacter) then
             myWeapon:Activate() -- Fire the gun if the raycast hits the murderer.
          else
             myWeapon:Activate() -- Fire the gun anyway.
          end
        else
          print("You are not holding the gun.")
        end
      else
        print("Murderer humanoid not found.")
      end
    else
      print("Murderer character not found.")
    end
  else
    print("Murderer not found.")
  end
end

mouse.Button1Down:Connect(function()
  if isSheriff() then
    hitMurderer()
  end
end)
            
   end,
})

local Toggle = MainTab:MakeToggle({
   Name = "all esp",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- MM2 Player Box ESP Script

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local espTable = {} -- Table to store ESP boxes

local function createESP(targetPlayer, color, showDistance)
  local targetCharacter = targetPlayer.Character
  if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
    local box = Instance.new("BillboardGui")
    box.Size = UDim2.new(0, 50, 0, 50)
    box.Adornee = targetCharacter.HumanoidRootPart
    box.AlwaysOnTop = true
    box.StudsOffset = Vector3.new(0, 2.5, 0)
    box.Parent = targetCharacter.HumanoidRootPart

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = color
    frame.BackgroundTransparency = 0.5
    frame.Parent = box

    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
    distanceLabel.Position = UDim2.new(0,0,0.5,0)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = Color3.new(1, 1, 1)
    distanceLabel.TextScaled = true
    distanceLabel.Parent = frame

    espTable[targetPlayer.UserId] = {box = box, distanceLabel = distanceLabel}

    return box
  end
end

local function updateESP()
  for targetPlayer, espData in pairs(espTable) do
    if targetPlayer and espData and espData.box and espData.distanceLabel then
      local targetCharacter = targetPlayer.Character
      if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
        local distance = (character.HumanoidRootPart.Position - targetCharacter.HumanoidRootPart.Position).Magnitude
        espData.distanceLabel.Text = math.floor(distance) .. " studs"
      else
        espData.box:Destroy()
        espTable[targetPlayer.UserId] = nil
      end
    end
  end
end

local function handlePlayer(targetPlayer)
  if targetPlayer ~= player then
    local targetRole = targetPlayer:GetAttribute("Role")
    local targetCharacter = targetPlayer.Character

    if targetRole == "Sheriff" then
      createESP(targetPlayer, Color3.new(0, 0, 1), true) -- Blue
    elseif targetRole == "Murderer" then
      createESP(targetPlayer, Color3.new(1, 0, 0), true) -- Red
    elseif targetRole == "Innocent" then
        createESP(targetPlayer, Color3.new(0, 1, 0), false) -- Green
    end

    targetPlayer.CharacterAdded:Connect(function(newCharacter)
        local targetRole = targetPlayer:GetAttribute("Role")
        if targetRole == "Sheriff" then
           createESP(targetPlayer, Color3.new(0, 0, 1), true)
        elseif targetRole == "Murderer" then
           createESP(targetPlayer, Color3.new(1, 0, 0), true)
        elseif targetRole == "Innocent" then
           createESP(targetPlayer, Color3.new(0, 1, 0), false)
        end
    end)

    targetPlayer.CharacterRemoving:Connect(function()
        if espTable[targetPlayer.UserId] then
          espTable[targetPlayer.UserId].box:Destroy()
          espTable[targetPlayer.UserId] = nil;
        end
    end)
  end
end

local function handleGun(targetPlayer)
  local targetCharacter = targetPlayer.Character
  if targetCharacter then
    local gun = targetCharacter:FindFirstChildOfClass("Tool")
    if gun and gun.Name == "Gun" then
        createESP(targetPlayer, Color3.new(0, 0, 1), true) -- Blue if innocent picks up gun
    else
        if targetPlayer:GetAttribute("Role") == "Innocent" then
            local espData = espTable[targetPlayer.UserId]
            if espData then
                espData.box:Destroy()
                espTable[targetPlayer.UserId] = nil
                createESP(targetPlayer, Color3.new(0,1,0), false)
            end
        end
    end
  end
end

local function handleSheriffDeath()
  game.Players.PlayerRemoving:Connect(function(leftPlayer)
    if leftPlayer:GetAttribute("Role") == "Sheriff" then
      for _, targetPlayer in pairs(game.Players:GetPlayers()) do
        local targetCharacter = targetPlayer.Character
        local gun = targetCharacter:FindFirstChildOfClass("Tool")
        if gun and gun.Name == "Gun" then
            createESP(gun.Parent.Parent, Color3.new(1, 0, 1), true) -- Purple gun location
        end
      end
    end
  end)
end

game.Players.PlayerAdded:Connect(handlePlayer)

for _, targetPlayer in pairs(game.Players:GetPlayers()) do
  handlePlayer(targetPlayer)
end

game:GetService("RunService").Heartbeat:Connect(updateESP)

game.Players.PlayerAdded:Connect(function(targetPlayer)
    targetPlayer.CharacterAdded:Connect(function(char)
        char.ChildAdded:Connect(function(obj)
            if obj:IsA("Tool") then
                handleGun(targetPlayer)
            end
        end)
        char.ChildRemoved:Connect(function(obj)
            if obj:IsA("Tool") then
                handleGun(targetPlayer)
            end
        end)
    end)
end)

handleSheriffDeath()
            
   end,
})

local Toggle = MainTab:MakeToggle({
   Name = "dodge",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- MM2 Auto-Dodge Script

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local dodgeDistance = 5 -- Adjust this value to control dodge distance
local dodgeCooldown = 1 -- Adjust this value to control dodge cooldown
local lastDodgeTime = 0

local function getAttacker()
  for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
    if otherPlayer ~= player then
      local otherCharacter = otherPlayer.Character
      if otherCharacter and otherCharacter:FindFirstChild("HumanoidRootPart") then
        local otherRole = otherPlayer:GetAttribute("Role")
        local myRole = player:GetAttribute("Role")

        if myRole == "Sheriff" or myRole == "Innocent" then
          if otherRole == "Murderer" then
            local weapon = otherCharacter:FindFirstChildOfClass("Tool")
            if weapon and weapon.Name == "Knife" then -- Check if they are holding the knife.
              return otherPlayer, weapon
            end
          end
        elseif myRole == "Murderer" then
          if otherRole == "Sheriff" then
            local weapon = otherCharacter:FindFirstChildOfClass("Tool")
            if weapon and weapon.Name == "Gun" then -- Check if they are holding the gun.
              return otherPlayer, weapon
            end
          end
        end
      end
    end
  end
  return nil, nil
end

local function dodgeAttack(attacker, weapon)
  local currentTime = tick()
  if currentTime - lastDodgeTime < dodgeCooldown then
    return -- Cooldown active, don't dodge
  end

  if not attacker or not weapon then
    return
  end

  local attackerCharacter = attacker.Character
  local attackerRootPart = attackerCharacter:FindFirstChild("HumanoidRootPart")

  if not attackerRootPart then
    return
  end

  local direction = (rootPart.Position - attackerRootPart.Position).Unit
  local dodgeVector = direction * dodgeDistance

  local newPosition = rootPart.Position + dodgeVector

  local humanoidState = humanoid:GetState()

  if humanoidState == Enum.HumanoidStateType.Running or humanoidState == Enum.HumanoidStateType.Freefall or humanoidState == Enum.HumanoidStateType.Landed then
    rootPart.CFrame = CFrame.new(newPosition, rootPart.Position)
    lastDodgeTime = currentTime
  end
end

game:GetService("RunService").Heartbeat:Connect(function()
  local attacker, weapon = getAttacker()
  if attacker and weapon then
    dodgeAttack(attacker, weapon)
  end
end)
            
   end,
})
